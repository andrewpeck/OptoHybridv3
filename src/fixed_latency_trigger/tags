!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CLK	.\lfsr_R24.v	/^    input CLK,$/;"	p
CLK_IN1	.\bufg_x2div2plus.v	/^  input         CLK_IN1,$/;"	p
CLK_OUT2	.\bufg_x2div2plus.v	/^  output        CLK_OUT2,$/;"	p
CLK_OUT3BUF	.\bufg_x2div2plus.v	/^  output        CLK_OUT3BUF$/;"	p
DLY	.\tx_sync.v	/^`define DLY #1$/;"	c
ENA_TEST_PAT	.\gem_fiber_out.v	/^	input         ENA_TEST_PAT,  \/\/ HIGH for PRBS!  (Low will send data from GxC registers)$/;"	p
GEM_DATA	.\gem_fiber_out.v	/^  input [55:0]  GEM_DATA,$/;"	p
GTX0_MGTREFCLKTX_IN	.\trg_tx_buf_bypass.v	/^      input           GTX0_MGTREFCLKTX_IN,$/;"	p
GTX0_RXN_IN	.\trg_tx_buf_bypass.v	/^      input           GTX0_RXN_IN,$/;"	p
GTX0_TXCHARISK_IN	.\trg_tx_buf_bypass.v	/^      input   [3:0]   GTX0_TXCHARISK_IN,$/;"	p
GTX0_TXDLYALIGNMONENB_IN	.\trg_tx_buf_bypass.v	/^      input           GTX0_TXDLYALIGNMONENB_IN,$/;"	p
GTX0_TXDLYALIGNRESET_IN	.\trg_tx_buf_bypass.v	/^      input           GTX0_TXDLYALIGNRESET_IN,$/;"	p
GTX0_TXOUTCLK_OUT	.\trg_tx_buf_bypass.v	/^      output          GTX0_TXOUTCLK_OUT,$/;"	p
GTX0_TXPLLLKDET_OUT	.\trg_tx_buf_bypass.v	/^      output          GTX0_TXPLLLKDET_OUT,$/;"	p
GTX0_TXPMASETPHASE_IN	.\trg_tx_buf_bypass.v	/^      input           GTX0_TXPMASETPHASE_IN,$/;"	p
GTX0_TXP_OUT	.\trg_tx_buf_bypass.v	/^      output          GTX0_TXP_OUT,$/;"	p
GTX0_TXUSRCLK2_IN	.\trg_tx_buf_bypass.v	/^      input           GTX0_TXUSRCLK2_IN,$/;"	p
GTX_POWER_SAVE	.\trg_tx_buf_bypass_gtx.v	/^    parameter   GTX_POWER_SAVE             =   10'b0000010000$/;"	c
GTX_SIM_GTXRESET_SPEEDUP	.\trg_tx_buf_bypass_gtx.v	/^    parameter   GTX_SIM_GTXRESET_SPEEDUP   =   0,      \/\/ Set to 1 to speed up sim reset$/;"	c
MGTREFCLKTX_IN	.\trg_tx_buf_bypass_gtx.v	/^    input   [1:0]   MGTREFCLKTX_IN,$/;"	p
MON_TRG_TX_DATA	.\gem_fiber_out.v	/^	output [31:0] MON_TRG_TX_DATA$/;"	p
MON_TX_SEL	.\gem_fiber_out.v	/^	output        MON_TX_SEL,$/;"	p
MXBITS	.\gem_fiber_out.v	/^parameter MXBITS = 56;$/;"	c
OUT_CLK_ENA	.\PRBS_tx.v	/^    input OUT_CLK_ENA,$/;"	p
PRBS_tx	.\PRBS_tx.v	/^module PRBS_tx($/;"	m
RESET	.\bufg_x2div2plus.v	/^  input         RESET,$/;"	p
RESET	.\tx_sync.v	/^        input           RESET$/;"	p
RST	.\PRBS_tx.v	/^    input RST,$/;"	p
RST	.\gem_fiber_out.v	/^	input         RST,           \/\/ PRBS Reset$/;"	p
SIM_TXPMASETPHASE_SPEEDUP	.\tx_sync.v	/^    parameter       SIM_TXPMASETPHASE_SPEEDUP   = 0$/;"	c
SYNC_DONE	.\tx_sync.v	/^        output          SYNC_DONE,$/;"	p
TRG_GTXTXRST	.\gem_fiber_out.v	/^	input         TRG_GTXTXRST,  \/\/ GTX Transmit Data Reset$/;"	p
TRG_SIGDET	.\gem_fiber_out.v	/^	input         TRG_SIGDET,    \/\/ ??$/;"	p
TRG_TXUSRCLK	.\gem_fiber_out.v	/^	input         TRG_TXUSRCLK,  \/\/ 160 MHz (derived from TXOUTCLK)$/;"	p
TRG_TX_BUF_BYPASS	.\trg_tx_buf_bypass.v	/^  module TRG_TX_BUF_BYPASS # ( parameter   WRAPPER_SIM_GTXRESET_SPEEDUP    = 0)    \/\/ Set to 1 to speed up sim reset$/;"	m
TRG_TX_BUF_BYPASS_GTX	.\trg_tx_buf_bypass_gtx.v	/^module TRG_TX_BUF_BYPASS_GTX #$/;"	m
TRG_TX_N	.\gem_fiber_out.v	/^	output        TRG_TX_N,$/;"	p
TRG_TX_PLL_LOCK	.\gem_fiber_out.v	/^	output        TRG_TX_PLL_LOCK,$/;"	p
TRG_TX_REFCLK	.\gem_fiber_out.v	/^	input         TRG_TX_REFCLK, \/\/ 160 MHz from QPLL$/;"	p
TXCHARISK_IN	.\trg_tx_buf_bypass_gtx.v	/^    input   [3:0]   TXCHARISK_IN,$/;"	p
TXDLYALIGNDISABLE	.\tx_sync.v	/^        output          TXDLYALIGNDISABLE,$/;"	p
TXDLYALIGNMONENB_IN	.\trg_tx_buf_bypass_gtx.v	/^    input           TXDLYALIGNMONENB_IN,$/;"	p
TXDLYALIGNRESET_IN	.\trg_tx_buf_bypass_gtx.v	/^    input           TXDLYALIGNRESET_IN,$/;"	p
TXOUTCLK_OUT	.\trg_tx_buf_bypass_gtx.v	/^    output          TXOUTCLK_OUT,$/;"	p
TXPLLLKDET_OUT	.\trg_tx_buf_bypass_gtx.v	/^    output          TXPLLLKDET_OUT,$/;"	p
TXPMASETPHASE_IN	.\trg_tx_buf_bypass_gtx.v	/^    input           TXPMASETPHASE_IN,$/;"	p
TXP_OUT	.\trg_tx_buf_bypass_gtx.v	/^    output          TXP_OUT,$/;"	p
TXUSRCLK2_IN	.\trg_tx_buf_bypass_gtx.v	/^    input           TXUSRCLK2_IN,$/;"	p
TX_SYNC	.\tx_sync.v	/^module TX_SYNC #$/;"	m
TX_SYNC_DONE	.\gem_fiber_out.v	/^	output        TX_SYNC_DONE,$/;"	p
align_reset_counter_r	.\tx_sync.v	/^    reg   [4:0]    align_reset_counter_r;$/;"	r
align_reset_r	.\tx_sync.v	/^    reg            align_reset_r;$/;"	r
begin_r	.\tx_sync.v	/^    reg            begin_r;$/;"	r
bufg_x2div2plus	.\bufg_x2div2plus.v	/^module bufg_x2div2plus$/;"	m
clkfbout	.\bufg_x2div2plus.v	/^  wire        clkfbout;$/;"	n
clkfbout_buf	.\bufg_x2div2plus.v	/^  wire        clkfbout_buf;$/;"	n
clkfboutb_unused	.\bufg_x2div2plus.v	/^  wire        clkfboutb_unused;$/;"	n
clkfbstopped_unused	.\bufg_x2div2plus.v	/^  wire        clkfbstopped_unused;$/;"	n
clkinstopped_unused	.\bufg_x2div2plus.v	/^  wire        clkinstopped_unused;$/;"	n
clkout0b_unused	.\bufg_x2div2plus.v	/^  wire        clkout0b_unused;$/;"	n
clkout1b_unused	.\bufg_x2div2plus.v	/^  wire        clkout1b_unused;$/;"	n
clkout2b_unused	.\bufg_x2div2plus.v	/^  wire        clkout2b_unused;$/;"	n
clkout3_unused	.\bufg_x2div2plus.v	/^  wire        clkout3_unused;$/;"	n
clkout3b_unused	.\bufg_x2div2plus.v	/^  wire        clkout3b_unused;$/;"	n
clkout4_unused	.\bufg_x2div2plus.v	/^  wire        clkout4_unused;$/;"	n
clkout5_unused	.\bufg_x2div2plus.v	/^  wire        clkout5_unused;$/;"	n
clkout6_unused	.\bufg_x2div2plus.v	/^  wire        clkout6_unused;$/;"	n
cluster0	.\trigger_links.v	/^wire [55:0] link_a = {cluster3, cluster2, cluster1, cluster0}; $/;"	n
cluster1	.\trigger_links.v	/^  input [13:0] cluster1, $/;"	p
cluster1	.\trigger_links.v	/^wire [55:0] link_a = {cluster3, cluster2, cluster1, cluster0}; $/;"	n
cluster2	.\trigger_links.v	/^wire [55:0] link_a = {cluster3, cluster2, cluster1, cluster0}; $/;"	n
cluster3	.\trigger_links.v	/^  input [13:0] cluster3, $/;"	p
cluster4	.\trigger_links.v	/^wire [55:0] link_b = {cluster7, cluster6, cluster5, cluster4}; $/;"	n
cluster5	.\trigger_links.v	/^  input [13:0] cluster5, $/;"	p
cluster5	.\trigger_links.v	/^wire [55:0] link_b = {cluster7, cluster6, cluster5, cluster4}; $/;"	n
cluster6	.\trigger_links.v	/^wire [55:0] link_b = {cluster7, cluster6, cluster5, cluster4}; $/;"	n
cluster7	.\trigger_links.v	/^  input [13:0] cluster7, $/;"	p
count_32_complete_r	.\tx_sync.v	/^    wire           count_32_complete_r;$/;"	n
count_align_reset_complete_r	.\tx_sync.v	/^    wire           count_align_reset_complete_r;$/;"	n
count_setphase_complete_r	.\tx_sync.v	/^    wire           count_setphase_complete_r;$/;"	n
do_unused	.\bufg_x2div2plus.v	/^  wire [15:0] do_unused;$/;"	n
drdy_unused	.\bufg_x2div2plus.v	/^  wire        drdy_unused;$/;"	n
frame_sep	.\gem_fiber_out.v	/^  reg [7:0] frame_sep;$/;"	r
frame_sep_cnt	.\gem_fiber_out.v	/^  reg [2:0] frame_sep_cnt=0;$/;"	r
frm_sep	.\gem_fiber_out.v	/^wire [7:0]  frm_sep;$/;"	n
gem_fiber_out	.\gem_fiber_out.v	/^module   gem_fiber_out #(parameter SIM_SPEEDUP = 0)$/;"	m
init_fill	.\lfsr_R24.v	/^	 parameter init_fill = 24'h4DB62E;$/;"	c
input	.\PRBS_tx.v	/^	  input INJ_ERR,$/;"	p
input	.\PRBS_tx.v	/^    input GEN_CLK,$/;"	p
input	.\gem_fiber_out.v	/^	input         INJ_ERR,       \/\/ PRBS Error Inject$/;"	p
input	.\gem_fiber_out.v	/^	input         TRG_CLK80,     \/\/ 80  MHz (derived from TXOUTCLK)$/;"	p
input	.\gem_fiber_out.v	/^	input         TRG_RST,       \/\/ Data Reset$/;"	p
input	.\gem_fiber_out.v	/^	input         TRG_TX_PLLRST, \/\/ use !rxpll_lock ?$/;"	p
input	.\gem_fiber_out.v	/^  input         GEM_OVERFLOW,$/;"	p
input	.\lfsr_R24.v	/^    input RST,$/;"	p
input	.\trg_tx_buf_bypass.v	/^      input           GTX0_GTXTXRESET_IN,$/;"	p
input	.\trg_tx_buf_bypass.v	/^      input           GTX0_PLLTXRESET_IN,$/;"	p
input	.\trg_tx_buf_bypass.v	/^      input           GTX0_RXP_IN,$/;"	p
input	.\trg_tx_buf_bypass.v	/^      input           GTX0_TXDLYALIGNDISABLE_IN,$/;"	p
input	.\trg_tx_buf_bypass.v	/^      input           GTX0_TXENPMAPHASEALIGN_IN,$/;"	p
input	.\trg_tx_buf_bypass.v	/^      input           GTX0_TXUSRCLK_IN,$/;"	p
input	.\trg_tx_buf_bypass.v	/^      input   [31:0]  GTX0_TXDATA_IN,$/;"	p
input	.\trg_tx_buf_bypass_gtx.v	/^    input           GTXTXRESET_IN,$/;"	p
input	.\trg_tx_buf_bypass_gtx.v	/^    input           PLLTXRESET_IN,$/;"	p
input	.\trg_tx_buf_bypass_gtx.v	/^    input           RXP_IN,$/;"	c
input	.\trg_tx_buf_bypass_gtx.v	/^    input           TXDLYALIGNDISABLE_IN,$/;"	p
input	.\trg_tx_buf_bypass_gtx.v	/^    input           TXENPMAPHASEALIGN_IN,$/;"	p
input	.\trg_tx_buf_bypass_gtx.v	/^    input           TXUSRCLK_IN,$/;"	p
input	.\trg_tx_buf_bypass_gtx.v	/^    input   [31:0]  TXDATA_IN,$/;"	p
input	.\trigger_links.v	/^  input [13:0] cluster0, $/;"	p
input	.\trigger_links.v	/^  input [13:0] cluster2, $/;"	p
input	.\trigger_links.v	/^  input [13:0] cluster4, $/;"	p
input	.\trigger_links.v	/^  input [13:0] cluster6, $/;"	p
input	.\trigger_links.v	/^  input overflow$/;"	p
input	.\trigger_links.v	/^  input ref_clk,    \/\/ 40 MHz QPLL Clock$/;"	p
input	.\tx_sync.v	/^        input           USER_CLK,$/;"	p
lfsr	.\PRBS_tx.v	/^wire [23:0] lfsr;$/;"	n
lfsr_R24	.\lfsr_R24.v	/^module lfsr_R24($/;"	m
lfsr_a	.\PRBS_tx.v	/^reg  [23:0] lfsr_a;$/;"	r
lfsr_b	.\PRBS_tx.v	/^reg  [23:0] lfsr_b;$/;"	r
link	.\trigger_links.v	/^wire [55:0] link [3:0]; $/;"	n
link_a	.\trigger_links.v	/^wire [55:0] link_a = {cluster3, cluster2, cluster1, cluster0}; $/;"	n
link_b	.\trigger_links.v	/^wire [55:0] link_b = {cluster7, cluster6, cluster5, cluster4}; $/;"	n
lt_trg	.\gem_fiber_out.v	/^reg         lt_trg;$/;"	r
mgt_refclk	.\trigger_links.v	/^  input mgt_refclk, \/\/ 160 MHz QPLL Clock$/;"	p
next_align_reset_c	.\tx_sync.v	/^    wire           next_align_reset_c;$/;"	n
next_phase_align_c	.\tx_sync.v	/^    wire           next_phase_align_c;$/;"	n
next_ready_c	.\tx_sync.v	/^    wire           next_ready_c;$/;"	n
next_wait_before_setphase_c	.\tx_sync.v	/^    wire           next_wait_before_setphase_c;$/;"	n
out_data	.\gem_fiber_out.v	/^wire [MXBITS-1:0] out_data;$/;"	n
output	.\bufg_x2div2plus.v	/^  output        CLK_OUT1,$/;"	p
output	.\bufg_x2div2plus.v	/^  output        CLK_OUT3,$/;"	p
output	.\bufg_x2div2plus.v	/^  output        LOCKED,$/;"	p
output	.\gem_fiber_out.v	/^	output        STRT_LTNCY,$/;"	p
output	.\gem_fiber_out.v	/^	output        TRG_TDIS,      \/\/ N\/A$/;"	p
output	.\gem_fiber_out.v	/^	output        TRG_TXOUTCLK,  \/\/ 80  MHz GTX clock output$/;"	p
output	.\gem_fiber_out.v	/^	output        TRG_TXRESETDONE,$/;"	p
output	.\gem_fiber_out.v	/^	output        TRG_TX_P,$/;"	p
output	.\gem_fiber_out.v	/^	output [3:0]  MON_TRG_TX_ISK,$/;"	p
output	.\trg_tx_buf_bypass.v	/^      output          GTX0_TXN_OUT,$/;"	p
output	.\trg_tx_buf_bypass.v	/^      output          GTX0_TXRESETDONE_OUT$/;"	p
output	.\trg_tx_buf_bypass.v	/^      output  [7:0]   GTX0_TXDLYALIGNMONITOR_OUT,$/;"	p
output	.\trg_tx_buf_bypass_gtx.v	/^    output          TXN_OUT,$/;"	p
output	.\trg_tx_buf_bypass_gtx.v	/^    output          TXRESETDONE_OUT$/;"	p
output	.\trg_tx_buf_bypass_gtx.v	/^    output  [7:0]   TXDLYALIGNMONITOR_OUT,$/;"	p
output	.\trigger_links.v	/^  output [3:0] trg_tx_n, $/;"	p
output	.\tx_sync.v	/^        output          TXDLYALIGNRESET,$/;"	p
output	.\tx_sync.v	/^        output          TXPMASETPHASE,$/;"	c
p_rst1	.\gem_fiber_out.v	/^reg         p_rst1,p_rst2,p_rst3,p_rst4;$/;"	r
p_rst2	.\gem_fiber_out.v	/^reg         p_rst1,p_rst2,p_rst3,p_rst4;$/;"	r
p_rst3	.\gem_fiber_out.v	/^reg         p_rst1,p_rst2,p_rst3,p_rst4;$/;"	r
p_rst4	.\gem_fiber_out.v	/^reg         p_rst1,p_rst2,p_rst3,p_rst4;$/;"	r
p_rst5	.\gem_fiber_out.v	/^reg         p_rst5,p_rst6,p_rst7,p_rst8;$/;"	r
p_rst6	.\gem_fiber_out.v	/^reg         p_rst5,p_rst6,p_rst7,p_rst8;$/;"	r
p_rst7	.\gem_fiber_out.v	/^reg         p_rst5,p_rst6,p_rst7,p_rst8;$/;"	r
p_rst8	.\gem_fiber_out.v	/^reg         p_rst5,p_rst6,p_rst7,p_rst8;$/;"	r
parameter	.\trg_tx_buf_bypass_gtx.v	/^    parameter   GTX_TX_CLK_SOURCE          =   "TXPLL",$/;"	c
phase_align_r	.\tx_sync.v	/^    reg            phase_align_r;$/;"	r
prbs	.\gem_fiber_out.v	/^wire [MXBITS-1:0] prbs;$/;"	n
prbs_rst	.\gem_fiber_out.v	/^wire        prbs_rst;$/;"	n
psdone_unused	.\bufg_x2div2plus.v	/^  wire        psdone_unused;$/;"	n
ready_r	.\tx_sync.v	/^    reg            ready_r;$/;"	r
reg	.\PRBS_tx.v	/^	  output reg STRT_LTNCY$/;"	p
reg	.\PRBS_tx.v	/^    output reg [47:0] PRBS,$/;"	p
reg	.\gem_fiber_out.v	/^	output reg    LTNCY_TRIG,$/;"	p
reg	.\lfsr_R24.v	/^    output reg [23:0] LFSR$/;"	p
reset	.\trigger_links.v	/^  input reset, $/;"	p
rst1	.\PRBS_tx.v	/^reg rst1 = 1'b1;$/;"	r
rst2	.\PRBS_tx.v	/^reg rst2 = 1'b1;$/;"	r
rst_f	.\PRBS_tx.v	/^reg rst_f = 1'b1;$/;"	r
rst_lfsr	.\PRBS_tx.v	/^wire rst_lfsr;$/;"	n
rst_tx	.\gem_fiber_out.v	/^reg         rst_tx;$/;"	r
start_pat	.\PRBS_tx.v	/^wire start_pat;$/;"	n
start_pattern	.\PRBS_tx.v	/^parameter start_pattern = 48'hFFFFFF000000;$/;"	c
sync_counter_r	.\tx_sync.v	/^    reg   [15:0]   sync_counter_r;$/;"	r
tied_to_ground_i	.\trg_tx_buf_bypass.v	/^    wire            tied_to_ground_i;$/;"	n
tied_to_ground_i	.\trg_tx_buf_bypass_gtx.v	/^    wire            tied_to_ground_i;$/;"	n
tied_to_ground_vec_i	.\trg_tx_buf_bypass.v	/^    wire    [63:0]  tied_to_ground_vec_i;$/;"	n
tied_to_ground_vec_i	.\trg_tx_buf_bypass_gtx.v	/^    wire    [63:0]  tied_to_ground_vec_i;$/;"	n
tied_to_vcc_i	.\trg_tx_buf_bypass.v	/^    wire            tied_to_vcc_i;$/;"	n
tied_to_vcc_i	.\trg_tx_buf_bypass_gtx.v	/^    wire            tied_to_vcc_i;$/;"	n
tied_to_vcc_vec_i	.\trg_tx_buf_bypass.v	/^    wire    [63:0]  tied_to_vcc_vec_i;$/;"	n
tied_to_vcc_vec_i	.\trg_tx_buf_bypass_gtx.v	/^    wire    [63:0]  tied_to_vcc_vec_i;$/;"	n
trg_tx_data	.\gem_fiber_out.v	/^wire [31:0] trg_tx_data;$/;"	n
trg_tx_dis	.\gem_fiber_out.v	/^wire trg_tx_dis;$/;"	n
trg_tx_isk	.\gem_fiber_out.v	/^wire [ 3:0] trg_tx_isk;$/;"	n
trg_tx_p	.\trigger_links.v	/^  output [3:0] trg_tx_p, $/;"	p
trg_txresetdone_r	.\gem_fiber_out.v	/^reg         trg_txresetdone_r;$/;"	r
trg_txresetdone_r2	.\gem_fiber_out.v	/^reg         trg_txresetdone_r2;$/;"	r
trgcnt	.\gem_fiber_out.v	/^reg  [7:0]  trgcnt;$/;"	r
trigger	.\trigger.vhd	/^entity trigger is$/;"	e
trigger_links	.\trigger_links.v	/^module trigger_links ($/;"	m
tx_dly_align_mon	.\gem_fiber_out.v	/^wire [7:0]  tx_dly_align_mon;$/;"	n
tx_dly_align_mon_ena	.\gem_fiber_out.v	/^wire        tx_dly_align_mon_ena;$/;"	n
tx_dlyaligndisable	.\gem_fiber_out.v	/^wire        tx_dlyaligndisable;$/;"	n
tx_dlyalignreset	.\gem_fiber_out.v	/^wire        tx_dlyalignreset;$/;"	n
tx_enpmaphasealign	.\gem_fiber_out.v	/^wire        tx_enpmaphasealign;$/;"	n
tx_out_clk	.\trigger_links.v	/^wire [3:0] tx_out_clk; $/;"	n
tx_pll_locked	.\trigger_links.v	/^wire [3:0] tx_pll_locked;$/;"	n
tx_pmasetphase	.\gem_fiber_out.v	/^wire        tx_pmasetphase;$/;"	n
tx_sel	.\gem_fiber_out.v	/^reg         tx_sel;$/;"	r
tx_sel_bar	.\gem_fiber_out.v	/^reg         tx_sel_bar;$/;"	r
txdata_i	.\trg_tx_buf_bypass_gtx.v	/^    wire    [31:0]  txdata_i;           $/;"	n
wait_before_setphase_counter_r	.\tx_sync.v	/^    reg   [5:0]    wait_before_setphase_counter_r;$/;"	r
wait_before_setphase_r	.\tx_sync.v	/^    reg            wait_before_setphase_r;$/;"	r
